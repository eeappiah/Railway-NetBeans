package Railway;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.*;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.border.Border;

/**
 *
 * @author Earl Appiah - eea7
 */
public class login extends javax.swing.JFrame {

    //Connection and statement for mysql
    Connection con;
    PreparedStatement pst;
    ResultSet rs;

    //User information
    static String id = "";
    static String username = "";
    static String fullname = "";
    static String email = "";
    static String dob = "";
    static String number = "";

    //create borders 
    Border default_top_border = BorderFactory.createMatteBorder(2, 0, 0, 0, new Color(42, 187, 155));
    Border red_top_border = BorderFactory.createMatteBorder(2, 0, 0, 0, Color.red);
    Border txtField_border = BorderFactory.createMatteBorder(0, 0, 2, 0, Color.red);

    //Array of componenets
    Component[] comps;
    HashMap<Component, String> map = new HashMap<>();
    
     //set date so no errors
        Calendar cal = Calendar.getInstance();
        Date date = cal.getTime();

    public login() {
        initComponents();
        Connect();

        // populate the comps
        comps = jPanelRegister.getComponents();

        //For loop for components for hashmap
        for (Component comp : comps) {

            if (comp instanceof JTextField) {
                JTextField textField = (JTextField) comp;
                map.put(textField, textField.getText());
            } else if (comp instanceof JPasswordField) {
                JPasswordField passField = (JPasswordField) comp;
                map.put(passField, String.valueOf(passField.getPassword()));
            }

        }

        // set borders
        jLabelLogin.setBorder(default_top_border);
        jLabelRegister.setBorder(default_top_border);
        txtUsername.setBorder(txtField_border);
        txtPassword.setBorder(txtField_border);
        txtRegUsername.setBorder(txtField_border);
        txtName.setBorder(txtField_border);
        txtEmail.setBorder(txtField_border);
        txtNumber.setBorder(txtField_border);
        txtPass.setBorder(txtField_border);
        txtPassConfirm.setBorder(txtField_border);

        //add the focus events
        addFocusEvent();

        // call jlabel mouse click event
        jLabelLoginMouseClicked(null);

        //System.out.println(map.isEmpty());
        //System.out.println(map);
    }

    // function to generate a random string of length n 
    static String getAlphaNumericString(int n) {

        // chose a Character random from this String 
        String AlphaNumericString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                + "0123456789"
                + "abcdefghijklmnopqrstuvxyz";

        // create StringBuffer size of AlphaNumericString 
        StringBuilder sb = new StringBuilder(n);

        for (int i = 0; i < n; i++) {

            // generate a random number between 
            // 0 to AlphaNumericString variable length 
            int index
                    = (int) (AlphaNumericString.length()
                    * Math.random());

            // add Character one by one in end of sb 
            sb.append(AlphaNumericString
                    .charAt(index));
        }

        return sb.toString();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        jPanelMain = new javax.swing.JPanel();
        jLabelRegister = new javax.swing.JLabel();
        jLabelLogin = new javax.swing.JLabel();
        jPanelRegister = new javax.swing.JPanel();
        jLabelUsername1 = new javax.swing.JLabel();
        txtRegUsername = new javax.swing.JTextField();
        txtPass = new javax.swing.JPasswordField();
        registerBut = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabelUsername2 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabelUsername3 = new javax.swing.JLabel();
        jLabelUsername4 = new javax.swing.JLabel();
        txtDate = new com.toedter.calendar.JDateChooser();
        txtNumber = new javax.swing.JTextField();
        jLabelUsername5 = new javax.swing.JLabel();
        txtPassConfirm = new javax.swing.JPasswordField();
        jLabelUsername6 = new javax.swing.JLabel();
        jLabelUsername7 = new javax.swing.JLabel();
        jPanelLogin = new javax.swing.JPanel();
        jLabelUsername = new javax.swing.JLabel();
        jLabelPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        loginBut = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        header = new javax.swing.JPanel();
        minmaxclose = new javax.swing.JPanel();
        buttonClose = new javax.swing.JPanel();
        closebutton = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(450, 490));

        backgroundPanel.setBackground(new java.awt.Color(102, 102, 102));
        backgroundPanel.setPreferredSize(new java.awt.Dimension(50, 500));
        backgroundPanel.setLayout(new java.awt.BorderLayout());

        jPanelMain.setBackground(new java.awt.Color(255, 255, 255));

        jLabelRegister.setBackground(new java.awt.Color(42, 187, 155));
        jLabelRegister.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelRegister.setForeground(new java.awt.Color(255, 255, 255));
        jLabelRegister.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRegister.setText("Register");
        jLabelRegister.setToolTipText("");
        jLabelRegister.setOpaque(true);
        jLabelRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelRegisterMouseClicked(evt);
            }
        });

        jLabelLogin.setBackground(new java.awt.Color(42, 187, 155));
        jLabelLogin.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabelLogin.setForeground(new java.awt.Color(255, 255, 255));
        jLabelLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLogin.setText("Login");
        jLabelLogin.setToolTipText("");
        jLabelLogin.setOpaque(true);
        jLabelLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLoginMouseClicked(evt);
            }
        });

        jPanelRegister.setBackground(new java.awt.Color(255, 255, 255));

        jLabelUsername1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelUsername1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelUsername1.setText("Username:*");
        jLabelUsername1.setToolTipText("");

        txtRegUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtRegUsername.setForeground(new java.awt.Color(153, 153, 153));
        txtRegUsername.setText("enter here...");
        txtRegUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRegUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRegUsernameFocusLost(evt);
            }
        });
        txtRegUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegUsernameActionPerformed(evt);
            }
        });

        txtPass.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPass.setForeground(new java.awt.Color(153, 153, 153));
        txtPass.setText("password");
        txtPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPassFocusLost(evt);
            }
        });
        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });

        registerBut.setBackground(new java.awt.Color(51, 153, 255));
        registerBut.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        registerBut.setForeground(new java.awt.Color(255, 255, 255));
        registerBut.setText("Register");
        registerBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 153, 153));
        jLabel12.setText("*please fill in your information");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtName.setForeground(new java.awt.Color(153, 153, 153));
        txtName.setText("enter here...");
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabelUsername2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelUsername2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelUsername2.setText("Full-Name:*");
        jLabelUsername2.setToolTipText("");

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(153, 153, 153));
        txtEmail.setText("enter here...");
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabelUsername3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelUsername3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelUsername3.setText("Email:*");
        jLabelUsername3.setToolTipText("");

        jLabelUsername4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelUsername4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelUsername4.setText("DoB:*");
        jLabelUsername4.setToolTipText("");

        txtDate.setForeground(new java.awt.Color(153, 153, 153));

        txtNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtNumber.setForeground(new java.awt.Color(153, 153, 153));
        txtNumber.setText("enter here...");
        txtNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumberFocusLost(evt);
            }
        });
        txtNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberActionPerformed(evt);
            }
        });
        txtNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumberKeyTyped(evt);
            }
        });

        jLabelUsername5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelUsername5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelUsername5.setText("Number:*");
        jLabelUsername5.setToolTipText("");

        txtPassConfirm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPassConfirm.setForeground(new java.awt.Color(153, 153, 153));
        txtPassConfirm.setText("woqdpass");
        txtPassConfirm.setToolTipText("");
        txtPassConfirm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPassConfirmFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPassConfirmFocusLost(evt);
            }
        });
        txtPassConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassConfirmActionPerformed(evt);
            }
        });

        jLabelUsername6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelUsername6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelUsername6.setText("Password:*");
        jLabelUsername6.setToolTipText("");

        jLabelUsername7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelUsername7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelUsername7.setText("Confirm:*");
        jLabelUsername7.setToolTipText("");

        javax.swing.GroupLayout jPanelRegisterLayout = new javax.swing.GroupLayout(jPanelRegister);
        jPanelRegister.setLayout(jPanelRegisterLayout);
        jPanelRegisterLayout.setHorizontalGroup(
            jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRegisterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelRegisterLayout.createSequentialGroup()
                        .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelUsername3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail)
                            .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanelRegisterLayout.createSequentialGroup()
                        .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelUsername1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelUsername2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName)
                            .addComponent(txtRegUsername)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelRegisterLayout.createSequentialGroup()
                        .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelUsername5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelUsername6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelUsername7, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassConfirm)
                            .addComponent(txtPass)
                            .addComponent(txtNumber))))
                .addGap(26, 26, 26))
            .addGroup(jPanelRegisterLayout.createSequentialGroup()
                .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRegisterLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(registerBut, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelRegisterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelRegisterLayout.setVerticalGroup(
            jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRegisterLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsername1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsername2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsername3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelUsername4)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsername5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsername6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRegisterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelUsername7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerBut, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jPanelLogin.setBackground(new java.awt.Color(255, 255, 255));

        jLabelUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelUsername.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Railway/images/user.png"))); // NOI18N
        jLabelUsername.setToolTipText("");

        jLabelPassword.setBackground(new java.awt.Color(255, 255, 255));
        jLabelPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelPassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Railway/images/lock.png"))); // NOI18N
        jLabelPassword.setToolTipText("");

        txtUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(153, 153, 153));
        txtUsername.setText("username");
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUsernameFocusLost(evt);
            }
        });
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(153, 153, 153));
        txtPassword.setText("Password");
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        loginBut.setBackground(new java.awt.Color(255, 102, 0));
        loginBut.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        loginBut.setForeground(new java.awt.Color(255, 255, 255));
        loginBut.setText("Login");
        loginBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 153, 153));
        jLabel11.setText("*Don't have a login? Click the register tab above");

        javax.swing.GroupLayout jPanelLoginLayout = new javax.swing.GroupLayout(jPanelLogin);
        jPanelLogin.setLayout(jPanelLoginLayout);
        jPanelLoginLayout.setHorizontalGroup(
            jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLoginLayout.createSequentialGroup()
                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLoginLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLoginLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(loginBut, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelLoginLayout.createSequentialGroup()
                                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtUsername)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelLoginLayout.setVerticalGroup(
            jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLoginLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPassword)
                    .addComponent(jLabelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(loginBut, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jLabel11)
                .addGap(64, 64, 64))
        );

        javax.swing.GroupLayout jPanelMainLayout = new javax.swing.GroupLayout(jPanelMain);
        jPanelMain.setLayout(jPanelMainLayout);
        jPanelMainLayout.setHorizontalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addComponent(jLabelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabelRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanelLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelRegister, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelMainLayout.setVerticalGroup(
            jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMainLayout.createSequentialGroup()
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        backgroundPanel.add(jPanelMain, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(backgroundPanel, java.awt.BorderLayout.CENTER);
        backgroundPanel.getAccessibleContext().setAccessibleDescription("");

        header.setBackground(new java.awt.Color(102, 102, 102));
        header.setPreferredSize(new java.awt.Dimension(449, 40));
        header.setRequestFocusEnabled(false);
        header.setLayout(new java.awt.BorderLayout());

        minmaxclose.setBackground(new java.awt.Color(102, 102, 102));
        minmaxclose.setDoubleBuffered(false);
        minmaxclose.setMinimumSize(new java.awt.Dimension(150, 40));
        minmaxclose.setPreferredSize(new java.awt.Dimension(150, 40));
        minmaxclose.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonClose.setBackground(new java.awt.Color(102, 102, 102));
        buttonClose.setPreferredSize(new java.awt.Dimension(70, 40));
        buttonClose.setLayout(new java.awt.BorderLayout());

        closebutton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closebutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Railway/images/delete_32px.png"))); // NOI18N
        closebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebuttonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closebuttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closebuttonMouseExited(evt);
            }
        });
        buttonClose.add(closebutton, java.awt.BorderLayout.CENTER);

        minmaxclose.add(buttonClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 50, 40));

        header.add(minmaxclose, java.awt.BorderLayout.LINE_END);

        getContentPane().add(header, java.awt.BorderLayout.PAGE_START);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void addFocusEvent() {
        for (Component comp : comps) {

            if (comp instanceof JTextField) {
                JTextField textField = (JTextField) comp;

                textField.addFocusListener(new FocusListener() {
                    @Override
                    public void focusGained(FocusEvent e) {

                        focusIn(textField, null, map.get(textField));

                    }

                    @Override
                    public void focusLost(FocusEvent e) {

                        focusOut(textField, null, map.get(textField));

                    }
                });
            } else if (comp instanceof JPasswordField) {
                JPasswordField passField = (JPasswordField) comp;

                passField.addFocusListener(new FocusListener() {
                    @Override
                    public void focusGained(FocusEvent e) {

                        focusIn(passField, null, map.get(passField));

                    }

                    @Override
                    public void focusLost(FocusEvent e) {

                        focusOut(passField, null, map.get(passField));

                    }
                });
            }

        }
    }

    // create a function for the focus in
    public void focusIn(JTextField textField, JPasswordField passField, String originalText) {
        // for the jpassword
        if (passField != null) {
            String passValue = String.valueOf(passField.getPassword());

            if (passValue.equals(originalText)) {
                passField.setText("");
                passField.setForeground(Color.black);
            }

        } // for the jtextfield
        else {
            String textFieldValue = textField.getText().trim().toLowerCase();

            if (textFieldValue.equals(originalText)) {
                textField.setText("");
                textField.setForeground(Color.black);
            }
        }

    }

    // create a function for the focus out
    public void focusOut(JTextField textField, JPasswordField passField, String originalText) {
        // for the jpassword
        if (passField != null) {
            String passValue = String.valueOf(passField.getPassword());

            if (passValue.equals(originalText) || passValue.equals("")) {
                passField.setText(originalText);
                passField.setForeground(new Color(153, 153, 153));
            }

        } // for the jtextfield
        else {
            String textFieldValue = textField.getText().trim().toLowerCase();

            if (textFieldValue.equals(originalText) || textFieldValue.equals("")) {
                textField.setText(originalText);
                textField.setForeground(new Color(153, 153, 153));
            }
        }
    }

//Mysql connection
    public void Connect() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/railway", "root", "");

        } catch (ClassNotFoundException | SQLException ex) {
            System.out.println(ex.getMessage());
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static String getUsername() {
        return username;
    }

    public void setUsername(String name) {
        username = name;
    }

    public static String getFullname() {
        return fullname;
    }

    public void setFullname(String fname) {
        fullname = fname;
    }

    public static String getId() {
        return id;
    }

    public void setId(String un) {
        id = un;
    }

    public static String getEmail() {
        return email;
    }

    public void setEmail(String mail) {
        email = mail;
    }

    public static String getDob() {
        return dob;
    }

    public void setDob(String birth) {
        dob = birth;
    }

    public static String getNumber() {
        return number;
    }

    public void setNumber(String num) {
        number = num;
    }

    public boolean verifyFields() {
        String uname = txtRegUsername.getText();
        String fname = txtName.getText();
        String mail = txtEmail.getText();
        String pnumber = txtNumber.getText();
        String pass1 = String.valueOf(txtPass.getPassword());
        String pass2 = String.valueOf(txtPassConfirm.getPassword());

        if (uname.equals("enter here...") || fname.equals("enter here...") || mail.equals("enter here...") || pnumber.equals("enter here...")
                || pass1.equals("password") || pass2.equals("password")) {
            JOptionPane.showMessageDialog(null, "One or more fields are empty, check again!", "Empty fields", 2);
            return false;

        } else if (!(pnumber.length() == 11)) {
            JOptionPane.showMessageDialog(null, "Phone number is not valid, please change", "Invalid entry", 2);
            return false;
        } else if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", mail)
                || Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", mail))) {
            JOptionPane.showMessageDialog(null, "Email is not valid, please change", "Invalid entry", 2);
            return false;

        } else if (!(pass1.equals(pass2))) {
            JOptionPane.showMessageDialog(null, "Passwords do not match", "Confirm password", 2);
            return false;
        } else {
            return true;
        }
    }

    public boolean checkUsername(String username) {
        PreparedStatement st;
        ResultSet rs;
        boolean username_exist = false;

        String query = "SELECT * FROM records WHERE username=? ";

        try {
            st = con.prepareStatement(query);
            st.setString(1, username);
            rs = st.executeQuery();

            if (rs.next()) {
                username_exist = true;
                JOptionPane.showMessageDialog(null, "This username exist already", "Please Choose another", 2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return username_exist;
    }

    public boolean checkEmail(String email) {
        PreparedStatement st;
        ResultSet rs;
        boolean email_exist = false;

        String query = "SELECT * FROM records WHERE email=? ";

        try {
            st = con.prepareStatement(query);
            st.setString(1, email);
            rs = st.executeQuery();

            if (rs.next()) {
                email_exist = true;
                JOptionPane.showMessageDialog(null, "This email is already associated with an account", "Please Choose another", 2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return email_exist;
    }

    public boolean checkNumber(String number) {
        PreparedStatement st;
        ResultSet rs;
        boolean number_exist = false;

        String query = "SELECT * FROM records WHERE number=? ";

        try {
            st = con.prepareStatement(query);
            st.setString(1, number);
            rs = st.executeQuery();

            if (rs.next()) {
                number_exist = true;
                JOptionPane.showMessageDialog(null, "This number is already associated with an account", "Please Choose another", 2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
        return number_exist;
    }

    private void loginButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButActionPerformed
        if (txtUsername.getText().equals("enter here...") || txtPassword.getPassword().equals("password")) {
            JOptionPane.showMessageDialog(this, "One or more of the fields are empty");

        } else {
            String query = "SELECT * FROM records WHERE username=? and password=?";
            try {
                pst = con.prepareStatement(query);
                pst.setString(1, txtUsername.getText());
                pst.setString(2, String.valueOf(txtPassword.getPassword()));

                rs = pst.executeQuery();

                if (rs.next()) {
                    setId(rs.getString(1));
                    setUsername(rs.getString(2));
                    setFullname(rs.getString(3));
                    setEmail(rs.getString(4));
                    setDob(rs.getString(5));
                    setNumber(rs.getString(6));
                    //System.out.println(username+id+fullname+email+dob+number);
                    Main a = new Main();
                    a.setVisible(true);
                    this.setVisible(false);
                    //a.welcomeLabel.setText("Welcome " + getFullname() + " !");

                } else {
                    JOptionPane.showMessageDialog(this, "Username and password not matched, username or password is wrong");
                }
            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_loginButActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void jLabelLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLoginMouseClicked
        // display login panel
        jPanelLogin.setVisible(true);
        jPanelRegister.setVisible(false);

        //border design on click
        jLabelLogin.setBorder(red_top_border);
        jLabelRegister.setBorder(default_top_border);

        //background design on selection
        jLabelLogin.setBackground(Color.white);
        jLabelLogin.setForeground(Color.black);
        jLabelRegister.setBackground(new Color(42, 187, 155));
        jLabelRegister.setForeground(Color.white);
        
        //reset resgeration labels 
        txtRegUsername.setText("enter here...");
        txtName.setText("enter here...");
        txtEmail.setText("enter here...");
        txtDate.setDate(date);
        txtPass.setText("Password");
        txtPassConfirm.setText("Paqsword");
    }//GEN-LAST:event_jLabelLoginMouseClicked

    private void jLabelRegisterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelRegisterMouseClicked
        // display register panel
        jPanelLogin.setVisible(false);
        jPanelRegister.setVisible(true);

        //border design on click
        jLabelLogin.setBorder(default_top_border);
        jLabelRegister.setBorder(red_top_border);

        //background design on selection
        jLabelRegister.setBackground(Color.white);
        jLabelRegister.setForeground(Color.black);
        jLabelLogin.setBackground(new Color(42, 187, 155));
        jLabelLogin.setForeground(Color.white);
        
        //set date to current date
        txtDate.setDate(date);
    }//GEN-LAST:event_jLabelRegisterMouseClicked

    private void closebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebuttonMouseClicked
        // close form
        this.dispose();
    }//GEN-LAST:event_closebuttonMouseClicked

    private void txtPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusGained
        // if the jpasswordfield text = username
        // clear the textfield
        String passwordValue = String.valueOf(txtPassword.getPassword()).trim().toLowerCase();

        if (passwordValue.equals("password")) {
            txtPassword.setText("");
            txtPassword.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtPasswordFocusGained

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        // if the textfield is empty -> set the text to 'username'
        String passwordValue = String.valueOf(txtPassword.getPassword()).trim().toLowerCase();

        if (passwordValue.equals("password") || passwordValue.equals("")) {
            txtPassword.setText("password");
            txtPassword.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtPasswordFocusLost

    private void txtUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusGained
        // if the jtextfield text = username
        // clear the textfield
        String usernameValue = txtUsername.getText().trim().toLowerCase();

        if (usernameValue.equals("username")) {
            txtUsername.setText("");
            txtUsername.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtUsernameFocusGained

    private void txtUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusLost
        // if the textfield is empty -> set the text to 'username'
        String usernameValue = txtUsername.getText().trim().toLowerCase();

        if (usernameValue.equals("username") || usernameValue.equals("")) {
            txtUsername.setText("username");
            txtUsername.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_txtUsernameFocusLost

    private void txtRegUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRegUsernameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegUsernameFocusGained

    private void txtRegUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRegUsernameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegUsernameFocusLost

    private void txtRegUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegUsernameActionPerformed

    private void txtPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPassFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassFocusGained

    private void txtPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPassFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassFocusLost

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void registerButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButActionPerformed
        String newID = getAlphaNumericString(17);
        String Usname = txtRegUsername.getText();
        String fname = txtName.getText();
        String email = txtEmail.getText();
        String num = txtNumber.getText();
        String pass = String.valueOf(txtPass.getPassword());
        String pass2 = String.valueOf(txtPassConfirm.getPassword());
        SimpleDateFormat dateformat = new SimpleDateFormat("dd-MM-yyyy");
        String bday = dateformat.format(txtDate.getDate());

        if (verifyFields() && !checkUsername(Usname) && !checkEmail(email) && !checkNumber(num)) {
            PreparedStatement ps;
            String query = "INSERT INTO `records`(`id` ,`username`, `fullname`, `email`, `dob`, `number`, `password`) VALUES (?,?,?,?,?,?,?)";

            try {
                pst = con.prepareStatement(query);
                pst.setString(1, newID);
                pst.setString(2, Usname);
                pst.setString(3, fname);
                pst.setString(4, email);
                pst.setString(5, bday);
                pst.setString(6, num);
                pst.setString(7, pass);

                if (pst.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "New User Added");
                    jLabelLoginMouseClicked(null);
                    txtRegUsername.setText("enter here...");
                    txtName.setText("enter here...");
                    txtEmail.setText("enter here...");
                    txtDate.setDate(date);
                    txtPass.setText("Password");
                    txtPassConfirm.setText("Paqsword");
                }
            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_registerButActionPerformed

    private void txtNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameFocusGained

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameFocusLost

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailFocusGained

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailFocusLost

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtNumberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumberFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumberFocusGained

    private void txtNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumberFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumberFocusLost

    private void txtNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumberActionPerformed

    private void txtPassConfirmFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPassConfirmFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassConfirmFocusGained

    private void txtPassConfirmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPassConfirmFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassConfirmFocusLost

    private void txtPassConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassConfirmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassConfirmActionPerformed
    public void changeColour(JPanel hover, Color rand) {
        hover.setBackground(rand);
    }
    private void closebuttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebuttonMouseEntered
        changeColour(buttonClose, new Color(255, 24, 0));
    }//GEN-LAST:event_closebuttonMouseEntered

    private void closebuttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebuttonMouseExited
        changeColour(buttonClose, new Color(102, 102, 102));
    }//GEN-LAST:event_closebuttonMouseExited

    private void txtNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumberKeyTyped
        //Only allow numbers
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNumberKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JPanel buttonClose;
    private javax.swing.JLabel closebutton;
    private javax.swing.JPanel header;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JLabel jLabelRegister;
    private javax.swing.JLabel jLabelUsername;
    private javax.swing.JLabel jLabelUsername1;
    private javax.swing.JLabel jLabelUsername2;
    private javax.swing.JLabel jLabelUsername3;
    private javax.swing.JLabel jLabelUsername4;
    private javax.swing.JLabel jLabelUsername5;
    private javax.swing.JLabel jLabelUsername6;
    private javax.swing.JLabel jLabelUsername7;
    private javax.swing.JPanel jPanelLogin;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelRegister;
    private javax.swing.JButton loginBut;
    private javax.swing.JPanel minmaxclose;
    private javax.swing.JButton registerBut;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumber;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtPassConfirm;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtRegUsername;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
